@model StockMarket.ViewModels.RegisterViewModel
@{
    ViewBag.Title = "Register Account";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Founds, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Founds, new { @class = "form-control" })
        </div>
    </div>
    <hr>
    for (int i = 0; i < Model.UserStocks.Count; i++)
    {
        <div class="form-group">
            @Html.Label(Model.UserStocks[i].Code, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.HiddenFor(s => s.UserStocks[i].StockId)
                @Html.TextBoxFor(s => s.UserStocks[i].Amount, new { @class = "form-control" })
                @Html.HiddenFor(s => s.UserStocks[i].Code)
            </div>
        </div>
        
    }
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Register" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
